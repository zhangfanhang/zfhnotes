(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{738:function(t,s,a){"use strict";a.r(s);var v=a(29),e=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"node-程序传递参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-程序传递参数"}},[t._v("#")]),t._v(" Node 程序传递参数")]),t._v(" "),a("p",[t._v("在某些情况下执行"),a("code",[t._v("node")]),t._v(" 程序的过程中，我们可能希望给 "),a("code",[t._v("node")]),t._v("传递一些参数："),a("code",[t._v("node index.js env=development")])]),t._v(" "),a("p",[t._v("如果我们这样来使用程序，就意味着我们需要在程序中获取到传递的参数：")]),t._v(" "),a("ul",[a("li",[t._v("获取参数其实是在 "),a("code",[t._v("process")]),t._v(" 的内置对象中的；")]),t._v(" "),a("li",[a("code",[t._v("process.argv")]),t._v("（"),a("code",[t._v("argument vector")]),t._v("的缩写，传入的具体参数）是一个数组，里面包含了我们需要的参数；")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 终端输入：`node index.js env=development`运行")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello node'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"特殊的全局对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊的全局对象"}},[t._v("#")]),t._v(" 特殊的全局对象")]),t._v(" "),a("p",[t._v("这些全局对象可以在模块中任意使用，但是在命令行交互中是不可以使用的")]),t._v(" "),a("p",[t._v("包括："),a("code",[t._v("__dirname")]),t._v("、"),a("code",[t._v("__filename")]),t._v("、"),a("code",[t._v("exports")]),t._v("、"),a("code",[t._v("module")]),t._v("、"),a("code",[t._v("require()")])]),t._v(" "),a("p",[a("code",[t._v("__dirname")]),t._v("：获取当前文件所在的路径;注意：不包括后面的文件名")]),t._v(" "),a("p",[a("code",[t._v("__filename")]),t._v("：获取当前文件所在的路径和文件名称;注意：包括后面的文件名称")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// D:\\myProject\\gitProject\\node_study\\特殊的全局对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// D:\\myProject\\gitProject\\node_study\\特殊的全局对象\\index.js")]),t._v("\n")])])]),a("h2",{attrs:{id:"常见的全局对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的全局对象"}},[t._v("#")]),t._v(" 常见的全局对象")]),t._v(" "),a("h3",{attrs:{id:"process-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-对象"}},[t._v("#")]),t._v(" process 对象")]),t._v(" "),a("p",[a("code",[t._v("process")]),t._v(" 提供了"),a("code",[t._v("Node")]),t._v(" 进程中相关的信息;比如 "),a("code",[t._v("Node")]),t._v(" 的运行环境、参数信息等；")]),t._v(" "),a("h3",{attrs:{id:"console-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#console-对象"}},[t._v("#")]),t._v(" console 对象")]),t._v(" "),a("p",[t._v("提供了简单的调试控制台")]),t._v(" "),a("h3",{attrs:{id:"定时器函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器函数"}},[t._v("#")]),t._v(" 定时器函数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("setTimeout(callback, delay[, ...args])")]),t._v("：callback 在 delay 毫秒后执行一次；")]),t._v(" "),a("li",[a("code",[t._v("setInterval(callback, delay[, ...args])")]),t._v("：callback 每 delay 毫秒重复执行一次；")]),t._v(" "),a("li",[a("code",[t._v("setImmediate(callback[, ...args])")]),t._v("：callback I / O 事件后的回调的“立即”执行；")]),t._v(" "),a("li",[a("code",[t._v("process.nextTick(callback[, ...args])")]),t._v("：添加到下一次 tick 队列中；")])]),t._v(" "),a("h2",{attrs:{id:"global-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global-对象"}},[t._v("#")]),t._v(" global 对象")]),t._v(" "),a("p",[a("code",[t._v("global")]),t._v(" 是一个全局对象，事实上 "),a("code",[t._v("process")]),t._v("、"),a("code",[t._v("console")]),t._v("、"),a("code",[t._v("setTimeout")]),t._v(" 等都有被放到"),a("code",[t._v("global")]),t._v(" 中")]),t._v(" "),a("p",[t._v("在浏览器中，全局变量都是在"),a("code",[t._v("window")]),t._v(" 上的，比如有"),a("code",[t._v("document")]),t._v("、"),a("code",[t._v("setInterval")]),t._v("、"),a("code",[t._v("setTimeout")]),t._v("、"),a("code",[t._v("alert")]),t._v("、"),a("code",[t._v("console")]),t._v("等等")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("Node")]),t._v(" 中，我们也有一个 "),a("code",[t._v("global")]),t._v(" 属性，并且看起来它里面有很多其他对象。")]),t._v(" "),a("p",[t._v("但是在浏览器中执行的 "),a("code",[t._v("JavaScript")]),t._v(" 代码，如果我们在顶级范围内通过 "),a("code",[t._v("var")]),t._v(" 定义的一个属性，默认会被添加到 "),a("code",[t._v("window")]),t._v("对象上")]),t._v(" "),a("p",[t._v("但是在"),a("code",[t._v("node")]),t._v("中，我们通过 "),a("code",[t._v("var")]),t._v("定义一个变量，它只是在当前模块中有一个变量，不会放到全局中")]),t._v(" "),a("h2",{attrs:{id:"模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),a("ul",[a("li",[t._v("事实上模块化开发最终的目的"),a("strong",[t._v("是将程序划分成一个个小的结构")]),t._v("；")]),t._v(" "),a("li",[t._v("这个结构中编写属于自己的逻辑代码，有自己的"),a("strong",[t._v("作用域")]),t._v("，不会影响到其他的结构；")]),t._v(" "),a("li",[t._v("这个结构可以将自己希望暴露的变量、函数、对象等导出给其结构使用；")]),t._v(" "),a("li",[t._v("也可以通过某种方式，导入另外结构中的变量、函数、对象等；")])]),t._v(" "),a("p",[t._v("上面说提到的结构，就是模块；按照这种结构划分开发程序的过程，就是模块化开发的过程；")]),t._v(" "),a("p",[t._v("JavaScript 本身，直到 ES6（2015）才推出了自己的模块化方案；")]),t._v(" "),a("p",[t._v("为了让 JavaScript 支持模块化，涌现出了很多不同的模块化规范：AMD、CMD、CommonJS 等；")]),t._v(" "),a("h3",{attrs:{id:"没有模块化带来很多的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有模块化带来很多的问题"}},[t._v("#")]),t._v(" 没有模块化带来很多的问题")]),t._v(" "),a("p",[t._v("早期没有模块化带来了很多的问题：比如"),a("strong",[t._v("命名冲突的问题")])]),t._v(" "),a("p",[t._v("当然，我们有办法可以解决上面的问题："),a("strong",[t._v("立即函数调用表达式 "),a("code",[t._v("IIFE")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'frank'")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("但是，我们其实带来了新的问题：")]),t._v(" "),a("ul",[a("li",[t._v("第一，我必须记得"),a("strong",[t._v("每一个模块中返回对象的命名")]),t._v("，才能在其他模块使用过程中正确的使用；")]),t._v(" "),a("li",[t._v("第二，代码写起来"),a("strong",[t._v("混乱不堪")]),t._v("，每个文件中的代码都需要"),a("strong",[t._v("包裹在一个匿名函数中来编写")]),t._v("；")]),t._v(" "),a("li",[t._v("第三，在"),a("strong",[t._v("没有合适的规范")]),t._v("情况下，每个人、每个公司都可能会任意命名、甚至出现模块名称相同的情况；")])]),t._v(" "),a("p",[t._v("所以，我们会发现，虽然实现了模块化，但是我们的实现过于简单，并且是没有规范的。")]),t._v(" "),a("ul",[a("li",[t._v("我们需要制定一定的规范来约束每个人都"),a("strong",[t._v("按照这个规范去编写模块化的代码")]),t._v("；")]),t._v(" "),a("li",[t._v("这个规范中应该包括核心功能："),a("strong",[t._v("模块本身可以导出暴露的属性，模块又可以导入自己需要的属性")]),t._v("；")]),t._v(" "),a("li",[t._v("JavaScript 社区为了解决上面的问题，涌现出"),a("strong",[t._v("一系列好用的规范")]),t._v("，接下来我们就学习具有代表性的一些规范。")])]),t._v(" "),a("h3",{attrs:{id:"commonjs-和-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-和-node"}},[t._v("#")]),t._v(" CommonJS 和 Node")]),t._v(" "),a("p",[t._v("我们需要知道 "),a("strong",[a("code",[t._v("CommonJS")]),t._v(" 是一个规范")]),t._v("，最初提出来是在浏览器以外的地方使用，并且当时被命名为 "),a("code",[t._v("ServerJS")]),t._v("，后来为了 体现它的广泛性，修改为"),a("code",[t._v("CommonJS")]),t._v("，平时我们也会简称为 "),a("code",[t._v("CJS")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Node")]),t._v(" 是"),a("code",[t._v("CommonJS")]),t._v(" 在服务器端一个具有代表性的实现；")]),t._v(" "),a("li",[a("code",[t._v("Browserify")]),t._v(" 是 "),a("code",[t._v("CommonJS")]),t._v(" 在浏览器中的一种实现；")]),t._v(" "),a("li",[a("code",[t._v("webpack")]),t._v("打包工具具备对 "),a("code",[t._v("CommonJS")]),t._v(" 的支持和转换；")])]),t._v(" "),a("p",[t._v("所以，"),a("code",[t._v("Node")]),t._v("中对 "),a("code",[t._v("CommonJS")]),t._v("进行了支持和实现，让我们在开发 "),a("code",[t._v("node")]),t._v(" 的过程中可以方便的进行模块化开发：")]),t._v(" "),a("ul",[a("li",[t._v("在 Node 中"),a("strong",[t._v("每一个 "),a("code",[t._v("js")]),t._v(" 文件都是一个单独的模块")]),t._v("；")]),t._v(" "),a("li",[t._v("这个模块中包括 "),a("strong",[a("code",[t._v("CommonJS")]),t._v("规范的核心变量")]),t._v("："),a("code",[t._v("exports")]),t._v("、"),a("code",[t._v("module.exports")]),t._v("、"),a("code",[t._v("require")]),t._v("；")]),t._v(" "),a("li",[t._v("我们可以使用这些变量来方便的进行"),a("strong",[t._v("模块化开发")]),t._v("；")])]),t._v(" "),a("p",[t._v("模块化的核心是导出和导入，"),a("code",[t._v("Node")]),t._v("中对其进行了实现：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("exports")]),t._v(" 和 "),a("code",[t._v("module.exports")]),t._v(" 可以负责对模块中的内容进行导出")]),t._v(" "),a("li",[a("code",[t._v("require")]),t._v(" 函数可以帮助我们导入其他模块（自定义模块、系统模块、第三方库模块）中的内容；")])])])}),[],!1,null,null,null);s.default=e.exports}}]);