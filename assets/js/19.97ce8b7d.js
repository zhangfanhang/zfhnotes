(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{637:function(t,s,a){"use strict";a.r(s);var e=a(29),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流"}},[t._v("#")]),t._v(" 回流")]),t._v(" "),a("p",[a("strong",[t._v("回流")]),t._v("又名"),a("strong",[t._v("重排")]),t._v("，指"),a("code",[t._v("几何属性")]),t._v("需改变的渲染。但感觉回流这个词较高大上，后续统称回流吧。")]),t._v(" "),a("p",[t._v("可理解成，将整个网页填白，对内容重新渲染一次。只不过以人眼的感官速度去看浏览器回流是不会有任何变化的，若你拥有"),a("code",[t._v("闪电侠")]),t._v("的感官速度去看浏览器回流("),a("code",[t._v("实质是将时间调慢")]),t._v(")，就会发现每次回流都会将页面清空，再从左上角第一个像素点从左到右从上到下这样一点一点渲染，直至右下角最后一个像素点。每次回流都会呈现该过程，只是感受不到而已。")]),t._v(" "),a("p",[t._v("渲染树的节点发生改变，影响了该节点的几何属性，导致该节点位置发生变化，此时就会触发浏览器回流并重新生成渲染树。回流意味着节点的几何属性改变，需重新计算并生成渲染树，导致渲染树的全部或部分发生变化。")]),t._v(" "),a("h2",{attrs:{id:"重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[t._v("#")]),t._v(" 重绘")]),t._v(" "),a("p",[a("strong",[t._v("重绘")]),t._v("指更改"),a("code",[t._v("外观属性")]),t._v("而不影响"),a("code",[t._v("几何属性")]),t._v("的渲染。相比回流，重绘在两者中会温和一些，后续谈到的 CSS 性能优化就会基于该特点展开。")]),t._v(" "),a("p",[t._v("渲染树的节点发生改变，但不影响该节点的几何属性。由此可见，回流对浏览器性能的消耗是高于重绘的，而且回流一定会伴随重绘，重绘却不一定伴随回流。")]),t._v(" "),a("p",[t._v("为何回流一定会伴随重绘呢？整个节点的位置都变了，肯定要重新渲染它的外观属性啊！")]),t._v(" "),a("h2",{attrs:{id:"属性分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性分类"}},[t._v("#")]),t._v(" 属性分类")]),t._v(" "),a("p",[t._v("以下对一些常用的几何属性和外观属性分类，其实同种分类的属性都有一些共同点，各位同学可自行感受。推荐一个查询属性渲染状态的网站"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fcsstriggers.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("CssTriggers"),a("OutboundLink")],1),t._v("，可查看每个属性在渲染过程中发生了什么影响了什么。")]),t._v(" "),a("ul",[a("li",[t._v("几何属性：包括布局、尺寸等可用数学几何衡量的属性")]),t._v(" "),a("li",[t._v("布局："),a("code",[t._v("display")]),t._v("、"),a("code",[t._v("float")]),t._v("、"),a("code",[t._v("position")]),t._v("、"),a("code",[t._v("list")]),t._v("、"),a("code",[t._v("table")]),t._v("、"),a("code",[t._v("flex")]),t._v("、"),a("code",[t._v("columns")]),t._v("、"),a("code",[t._v("grid")])]),t._v(" "),a("li",[t._v("尺寸："),a("code",[t._v("margin")]),t._v("、"),a("code",[t._v("padding")]),t._v("、"),a("code",[t._v("border")]),t._v("、"),a("code",[t._v("width")]),t._v("、"),a("code",[t._v("height")])]),t._v(" "),a("li",[t._v("外观属性：包括界面、文字等可用状态向量描述的属性")]),t._v(" "),a("li",[t._v("界面："),a("code",[t._v("appearance")]),t._v("、"),a("code",[t._v("outline")]),t._v("、"),a("code",[t._v("background")]),t._v("、"),a("code",[t._v("mask")]),t._v("、"),a("code",[t._v("box-shadow")]),t._v("、"),a("code",[t._v("box-reflect")]),t._v("、"),a("code",[t._v("filter")]),t._v("、"),a("code",[t._v("opacity")]),t._v("、"),a("code",[t._v("clip")])]),t._v(" "),a("li",[t._v("文字："),a("code",[t._v("text")]),t._v("、"),a("code",[t._v("font")]),t._v("、"),a("code",[t._v("word")])])]),t._v(" "),a("blockquote",[a("p",[t._v("如何理解回流重绘")])]),t._v(" "),a("p",[t._v("有无更好的方式可帮助理解"),a("strong",[t._v("回流重绘")]),t._v("呢？答案是有的。")]),t._v(" "),a("p",[t._v("某一天星巴克发行一套很有纪念价值的杯子，男同胞们为了买到心仪的杯子给女友当惊喜礼物，通宵达旦搬张板凳去星巴克门口排队。此时形成的队伍是有序的，毕竟大家都是文明人，不可能随便插队吧，先到先拿，这个道理谁都懂！")]),t._v(" "),a("p",[t._v("可是总有一些人不按常理出牌，别人排队排得那么辛苦，他一到来就仗着自己有钱有势人多马多，插队到最前面。若他插队成功，那么后面的人都要往后挪一位。此时队伍就要重新往后挪，甚至引发多人斗殴。但混乱的情况总会被控制下来，此时就得重新排队，而原先的队伍顺序经过这次斗殴就可能不按照原先的队伍顺序排队了。几何属性变了，就要重新排队，这个就是"),a("strong",[t._v("回流")]),t._v("或"),a("strong",[t._v("重排")]),t._v("。重新排队啊 😂！")]),t._v(" "),a("p",[t._v("一位漂亮妹纸排队排得久肚子呱呱叫，就与另一位同伴交换，她去买早餐，而这位同伴代替她的位置。各位男同胞可能发现这位妹纸更漂亮了。没错，外观属性改变了，变漂亮了，但除了妹纸，其余人的位置和顺序都无发生变化，所以肯定不会发生上述重新排队的情况。外观属性变了，但几何属性没变，这个就是"),a("strong",[t._v("重绘")]),t._v("。不用重新排队，还有漂亮妹纸看，大家都很乐意 🤔！")]),t._v(" "),a("h2",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),a("p",[a("strong",[t._v("回流重绘")]),t._v("在操作节点样式时频繁出现，同时也存在很大程度上的性能问题。"),a("code",[t._v("回流成本比重绘成本高得多")]),t._v("，一个节点的回流很有可能导致子节点、兄弟节点或祖先节点的回流。在一些高性能电脑上也许无什么影响，但回流发生在手机上("),a("code",[t._v("明摆说某些安卓手机")]),t._v(")，就会"),a("code",[t._v("减缓加载速度")]),t._v("和"),a("code",[t._v("增加电量消耗")]),t._v("。")]),t._v(" "),a("p",[t._v("在上一章中引出一个定向法则："),a("strong",[t._v("回流必定引发重绘，重绘不一定引发回流")]),t._v("，可利用该法则解决一些因为回流重绘而引发的性能问题。在优化性能前，需了解什么情况可能产生性能问题，以下罗列一些常见的情况。")]),t._v(" "),a("ul",[a("li",[t._v("改变窗口大小")]),t._v(" "),a("li",[t._v("修改盒模型")]),t._v(" "),a("li",[t._v("增删样式")]),t._v(" "),a("li",[t._v("重构布局")]),t._v(" "),a("li",[t._v("重设尺寸")]),t._v(" "),a("li",[t._v("改变字体")]),t._v(" "),a("li",[t._v("改动文字")])]),t._v(" "),a("p",[t._v("很多同学可能不知，回流重绘其实与浏览器的"),a("strong",[t._v("事件循环")]),t._v("有关，以下源自对"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fhtml.spec.whatwg.org%2Fmultipage%2Fwebappapis.html%23event-loop-processing-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 文档"),a("OutboundLink")],1),t._v("的理解。")]),t._v(" "),a("ul",[a("li",[t._v("浏览器刷新频率为"),a("code",[t._v("60Hz")]),t._v("，即每"),a("code",[t._v("16.6ms")]),t._v("更新一次")]),t._v(" "),a("li",[a("code",[t._v("事件循环")]),t._v("执行完成"),a("code",[t._v("微任务")])]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("document")]),t._v("是否需更新")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("resize/scroll")]),t._v("事件是否存在，存在则触发事件")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("Media Query")]),t._v("是否触发")]),t._v(" "),a("li",[t._v("更新动作并发送事件")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("document.isFullScreen")]),t._v("是否为"),a("code",[t._v("true")]),t._v("(全屏)")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("requestAnimationFrame")]),t._v("回调")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("IntersectionObserver")]),t._v("回调")]),t._v(" "),a("li",[t._v("更新界面")])]),t._v(" "),a("p",[t._v("上述就是浏览器每一帧中可能会做到的事情，若在一帧中有空闲时间，就会执行"),a("code",[t._v("requestIdleCallback")]),t._v("回调。")]),t._v(" "),a("p",[t._v("回到正题，通过定向法则"),a("strong",[t._v("回流必定引发重绘，重绘不一定引发回流")]),t._v("可知道，尽量减少回流重绘，就是 CSS 性能优化中一个很好的指标。")]),t._v(" "),a("blockquote",[a("p",[t._v("如何减少和避免回流重绘")])]),t._v(" "),a("h3",{attrs:{id:"使用-visibility-hidden-替换-display-none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-visibility-hidden-替换-display-none"}},[t._v("#")]),t._v(" 使用 visibility:hidden 替换 display:none")]),t._v(" "),a("p",[t._v("笔者从以下四方面对比"),a("code",[t._v("display:none")]),t._v("和"),a("code",[t._v("visibility:hidden")]),t._v("，"),a("code",[t._v("display:none")]),t._v("简称"),a("code",[t._v("DN")]),t._v("，"),a("code",[t._v("visibility:hidden")]),t._v("简称"),a("code",[t._v("VH")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("占位表现\n"),a("ul",[a("li",[t._v("DN 不占据空间")]),t._v(" "),a("li",[t._v("VH 占据空间")])])]),t._v(" "),a("li",[t._v("触发影响\n"),a("ul",[a("li",[t._v("DN 触发回流重绘")]),t._v(" "),a("li",[t._v("VH 触发重绘")])])]),t._v(" "),a("li",[t._v("过渡影响\n"),a("ul",[a("li",[t._v("DN 影响过渡不影响动画")]),t._v(" "),a("li",[t._v("VH 不影响过渡不影响动画")])])]),t._v(" "),a("li",[t._v("株连效果\n"),a("ul",[a("li",[t._v("DN 后自身及其子节点全都不可见")]),t._v(" "),a("li",[t._v("VH 后自身及其子节点全都不可见但可声明子节点"),a("code",[t._v("visibility:visible")]),t._v("单独显示")])])])]),t._v(" "),a("p",[t._v("两者的"),a("code",[t._v("占位表现")]),t._v("、"),a("code",[t._v("触发影响")]),t._v("和"),a("code",[t._v("株连效果")]),t._v("就能说明"),a("code",[t._v("VH")]),t._v("代替"),a("code",[t._v("DN")]),t._v("的好处，从两者区别中就能找出恰当的答案了。")]),t._v(" "),a("h3",{attrs:{id:"使用-transform-代替-top"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-transform-代替-top"}},[t._v("#")]),t._v(" 使用 transform 代替 top")]),t._v(" "),a("p",[a("code",[t._v("top")]),t._v("是几何属性，操作"),a("code",[t._v("top")]),t._v("会改变节点位置从而引发回流，使用"),a("code",[t._v("transform:translate3d(x,0,0)")]),t._v("代替"),a("code",[t._v("top")]),t._v("，只会引发图层重绘，还会间接启动 GPU 加速，该情况在第 12 章"),a("strong",[t._v("变换与动画")]),t._v("中会详细讲述。")]),t._v(" "),a("h3",{attrs:{id:"避免使用-table-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免使用-table-布局"}},[t._v("#")]),t._v(" 避免使用 Table 布局")]),t._v(" "),a("p",[a("code",[t._v("牵一发而动全身")]),t._v("用在 Table 布局身上就很适合了，可能很小的一个改动就会造成整个"),a("code",[t._v("<table>")]),t._v("回流，有兴趣的同学可用"),a("code",[t._v("Chrome Devtools")]),t._v("的"),a("code",[t._v("Performance")]),t._v("调试看看，在此就不演示了。")]),t._v(" "),a("p",[t._v("通常可用"),a("code",[t._v("<ul>")]),t._v("、"),a("code",[t._v("<li>")]),t._v("和"),a("code",[t._v("<span>")]),t._v("等标签取代"),a("code",[t._v("<table>")]),t._v("系列标签生成表格。")]),t._v(" "),a("h3",{attrs:{id:"避免规则层级过多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免规则层级过多"}},[t._v("#")]),t._v(" 避免规则层级过多")]),t._v(" "),a("p",[t._v("浏览器的"),a("code",[t._v("CSS解析器")]),t._v("解析"),a("code",[t._v("css文件")]),t._v("时，对 CSS 规则是从右到左匹配查找，样式层级过多会影响回流重绘效率，建议保持 CSS 规则在"),a("code",[t._v("3层")]),t._v("左右。")]),t._v(" "),a("h3",{attrs:{id:"避免节点属性值放在循环里当成循环变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免节点属性值放在循环里当成循环变量"}},[t._v("#")]),t._v(" 避免节点属性值放在循环里当成循环变量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("呵呵，每次循环操作 DOM 都会发生回流，应该在循环外使用变量保存一些不会变化的 DOM 映射值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"动态改变类而不改变样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态改变类而不改变样式"}},[t._v("#")]),t._v(" 动态改变类而不改变样式")]),t._v(" "),a("p",[t._v("不要尝试每次操作 DOM 去改变节点样式，这样会频繁触发回流。")]),t._v(" "),a("p",[t._v("更好的方式是使用新的类名预定义节点样式，在执行逻辑操作时收集并确认最终更换的类名集合，在适合时机一次性动态替换原来的类名集合。有点像"),a("code",[t._v("vue")]),t._v("的"),a("code",[t._v("依赖收集机制")]),t._v("，不知这样描述会不会更容易理解。")]),t._v(" "),a("p",[t._v("各位同学可研究下这个强大的"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.runoob.com%2Fjsref%2Fprop-element-classlist.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("classList"),a("OutboundLink")],1),t._v("，它能满足笔者所说的需求。")]),t._v(" "),a("h3",{attrs:{id:"将频繁回流重绘的节点设置为图层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将频繁回流重绘的节点设置为图层"}},[t._v("#")]),t._v(" 将频繁回流重绘的节点设置为图层")]),t._v(" "),a("p",[t._v("上一章的"),a("code",[t._v("渲染过程")]),t._v("最后一步，提到将回流重绘生成的图层逐张合并并显示在屏幕上。可将其理解成"),a("code",[t._v("Photoshop")]),t._v("的图层，若不对图层添加关联，图层间是不会互相影响的。同理，在浏览器中设置频繁回流或重绘的节点为一张新图层，那么新图层就能够阻止节点的渲染行为影响别的节点，这张图层里如何变化都无法影响到其他图层。")]),t._v(" "),a("p",[t._v("设置新图层有两种方式，将节点设置为"),a("code",[t._v("<video>")]),t._v("或"),a("code",[t._v("<iframe>")]),t._v("，为节点添加"),a("code",[t._v("will-change")]),t._v("。"),a("code",[t._v("will-change")]),t._v("是一个很叼的属性，在第 12 章"),a("strong",[t._v("变换与动画")]),t._v("中会详细讲述。")]),t._v(" "),a("h3",{attrs:{id:"使用-requestanimationframe-作为动画帧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-requestanimationframe-作为动画帧"}},[t._v("#")]),t._v(" 使用 requestAnimationFrame 作为动画帧")]),t._v(" "),a("p",[t._v("动画速度越快，回流次数越多，上述有提到浏览器刷新频率为"),a("code",[t._v("60Hz")]),t._v("，即每"),a("code",[t._v("16.6ms")]),t._v("更新一次，而"),a("code",[t._v("requestAnimationFrame()")]),t._v("正是以"),a("code",[t._v("16.6ms")]),t._v("的速度更新一次。所以可用"),a("code",[t._v("requestAnimationFrame()")]),t._v("代替"),a("code",[t._v("setInterval()")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"属性排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性排序"}},[t._v("#")]),t._v(" 属性排序")]),t._v(" "),a("p",[t._v("在进入属性排序这个话题前，先来看看以下两段 CSS 代码。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".elem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f66"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".elem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f66"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("若不特别指明，可能各位同学觉得这两段代码无异样，顶多就是属性顺序不同。但仔细观察两段代码，就会发现第一段代码好像无依据地随便排列，而第二段代码好像按照某些规范顺序排列。")]),t._v(" "),a("p",[a("strong",[t._v("属性排序")]),t._v("指按照预设规范排列属性。提供一个预设的约定规范，依据该规范以一定的顺序排列所有属性。")]),t._v(" "),a("p",[t._v("曾经笔者也是随机排列属性顺序，想到什么写什么，反正能实现就行。但反过来看，随意真的好吗，每次维护代码都需反复确认某个属性是否已经存在，混乱的属性排序让笔者有时无法在脑海里构思出更好的排版。所以笔者下意识去了解和认识属性排序，利用一些约定规范合理管理我的 CSS 代码。")]),t._v(" "),a("p",[t._v("曾经有一个著名的 CSS 网站"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fcss-tricks.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSSTricks"),a("OutboundLink")],1),t._v("做了一份属性排序的"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fcss-tricks.com%2Fpoll-results-how-do-you-order-your-css-properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("调查问卷"),a("OutboundLink")],1),t._v("，调查结果如下。")])])}),[],!1,null,null,null);s.default=v.exports}}]);