(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{720:function(t,s,n){"use strict";n.r(s);var a=n(29),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("code",[t._v("闭包")]),t._v("确实很难理解，之前我是这样理解的：")]),t._v(" "),n("p",[n("strong",[t._v("闭包指的是那些引用了另一个函数作用域中变量的函数，通常是在嵌套函数中实现的。")])]),t._v(" "),n("p",[t._v("再后来看到这样一段话：")]),t._v(" "),n("p",[t._v("在函数中被使用，但它既不是函数参数、也不是函数的局部变量，而是一个不属于当前作用域的变量，此时它相对于当前作用域来说，就是一个"),n("code",[t._v("自由变量")]),t._v("。而"),n("strong",[t._v("引用了自由变量的函数，就叫闭包")]),t._v("。")]),t._v(" "),n("p",[t._v("比如说：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fuN "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fuN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("没错，这样就形成了一个闭包。a 既不是函数的参数，也不是函数的局部变量，对于该函数来说 a 就是一个自由变量，这个函数就是"),n("code",[t._v("闭包")])]),t._v(" "),n("p",[n("code",[t._v("闭包")]),t._v("使已经运行结束的函数上下文中的"),n("strong",[t._v("变量对象")]),t._v("("),n("code",[t._v("每个上下文都有一个关联的变量对象，而这个上下文中定义的所有变量和函数都存在于这个对象上")]),t._v(")继续留在内存中，因为闭包函数保留了这个变量对象的引用，"),n("strong",[t._v("所以这个变量对象不会被回收")]),t._v("。")]),t._v(" "),n("p",[t._v("所以我们在调用完"),n("code",[t._v("fun()")]),t._v("函数之后，调用"),n("code",[t._v("fuN()")]),t._v("，依然可以打印出 a 的值")])])}),[],!1,null,null,null);s.default=e.exports}}]);