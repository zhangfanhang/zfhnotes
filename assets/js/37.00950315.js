(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{655:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("h3",{attrs:{id:"变量的默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的默认值"}},[t._v("#")]),t._v(" 变量的默认值")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("一个变量只定义，但没有赋初值，默认值是 "),a("code",[t._v("undefined")])])]),t._v(" "),a("li",[a("p",[t._v("一个变量只有被 "),a("code",[t._v("var")]),t._v(" 定义，并赋初值之后，才算正式初始化完成")])])]),t._v(" "),a("h3",{attrs:{id:"变量的常见错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的常见错误"}},[t._v("#")]),t._v(" 变量的常见错误")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("虽然可以通过省略 "),a("code",[t._v("var")]),t._v(" 操作符定义全局变量，但不推荐这么做。在局部作用域中定义的全局变量很难维护，也会造成困惑。这是因为不能一下子断定省略 "),a("code",[t._v("var")]),t._v(" 是不是有意而为之。在严格模式下，如果像这样给未声明的变量赋值，则会导致抛出错误")])]),t._v(" "),a("ul",[a("li",[t._v("不用 "),a("code",[t._v("var")]),t._v(" 定义，而直接将值赋予它，虽不引发报错，但会"),a("strong",[t._v("产生作用域问题:")])])]),t._v(" "),a("p",[t._v("在函数外，用 "),a("code",[t._v("var")]),t._v("声明的变量为全局变量，不用 "),a("code",[t._v("var")]),t._v(" 声明的变量也为全局变量。全局变量其实是在 "),a("code",[t._v("window")]),t._v("对象中添加属性并赋值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n")])])]),a("p",[t._v("在函数中，用 "),a("code",[t._v("var")]),t._v(" 声明的变量为局部变量，"),a("strong",[t._v("不用 "),a("code",[t._v("var")]),t._v("声明的变量为全局变量")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\n")])])]),a("p",[a("code",[t._v("delete")]),t._v(" 用来删除对象的属性，如果是不能删除的属性返回 "),a("code",[t._v("false")]),t._v("，其他情况返回 "),a("code",[t._v("true")]),t._v(",可以看到，变量 "),a("code",[t._v("a")]),t._v(" "),a("code",[t._v("b")]),t._v(" 都是全局变量，同为 "),a("code",[t._v("window")]),t._v("对象的其中一个属性，"),a("code",[t._v("a")]),t._v(" 不可以删除，"),a("code",[t._v("b")]),t._v(" 可以删除")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 456")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("p",[t._v("即："),a("strong",[t._v("同为全局变量，同为 "),a("code",[t._v("window")]),t._v("对象的其中一个属性，用 "),a("code",[t._v("var")]),t._v(" 声明的变量不可以删除，不用 "),a("code",[t._v("var")]),t._v(" 声明的变量可以删除！")])]),t._v(" "),a("p",[t._v("对象属性是否可删除, 其实是可以配置的:")]),t._v(" "),a("p",[a("code",[t._v("Object.getOwnPropertyDescriptor()")]),t._v("方法返回某个对象属性的描述对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 123, writable: true, enumerable: true, configurable: false}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {value: 456, writable: true, enumerable: true, configurable: true}")]),t._v("\n")])])]),a("p",[t._v("我们可以看到 "),a("code",[t._v("window")]),t._v(" 对象的属性 "),a("code",[t._v("a")]),t._v("和 "),a("code",[t._v("b")]),t._v(" 的描述对象包含以下信息:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("value")]),t._v("属性的值")]),t._v(" "),a("li",[a("code",[t._v("writable")]),t._v(" 属性是否可被修改，布尔值")]),t._v(" "),a("li",[a("code",[t._v("enumerable")]),t._v(" 属性是否可被枚举(遍历)，布尔值")]),t._v(" "),a("li",[a("code",[t._v("configurable")]),t._v(" 属性是否可以被删除，布尔值")]),t._v(" "),a("li",[t._v("属性 "),a("code",[t._v("a")]),t._v(" 和 "),a("code",[t._v("b")]),t._v(" 的描述对象区别在于是否可删除, 这个特性属性 "),a("code",[t._v("a")]),t._v(" 为 "),a("code",[t._v("configurable: false")]),t._v(" 不可删除,属性 "),a("code",[t._v("b")]),t._v(" 为 "),a("code",[t._v("configurable: true")]),t._v(" 可删除")])]),t._v(" "),a("p",[t._v("即："),a("strong",[t._v("对象的属性是否可删除，取决于描述对象的属性 "),a("code",[t._v("configurable")]),t._v("，用 "),a("code",[t._v("var")]),t._v(" 声明的变量默认不可删除，不用 "),a("code",[t._v("var")]),t._v(" 声明的变量默认可删除")])]),t._v(" "),a("p",[t._v("经过下面代码在浏览器中测试，"),a("strong",[t._v("var 定义的全局变量，无法修改它的 "),a("code",[t._v("configurable")]),t._v(" 属性，即它无法被修改为可删除。"),a("strong",[t._v("而不使用 "),a("code",[t._v("var")]),t._v("声明的全局变量")]),t._v("可以修改")]),t._v("它的 "),a("code",[t._v("configurable")]),t._v(" 属性：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用var声明")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用var声明")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fasle")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//无法重新定义属性: a at Function.defineProperty")]),t._v("\n")])])]),a("p",[t._v("参考："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.defineProperty()"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("尝试使用一个既没有被"),a("code",[t._v("var")]),t._v("定义过，也没有赋过值的字符就会产生引用错误。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  b is not defined")]),t._v("\n")])])]),a("h3",{attrs:{id:"变量的合法命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的合法命名"}},[t._v("#")]),t._v(" 变量的合法命名")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("变量，函数，对象的属性 一般都采用"),a("strong",[t._v("小驼峰命名法")]),t._v("，类名，构造函数采用"),a("strong",[t._v("大驼峰命名法")]),t._v("，即"),a("strong",[t._v("首字母也要大写")])]),t._v(" "),a("p",[a("strong",[t._v("关键字、保留字、"),a("code",[t._v("true")]),t._v("、"),a("code",[t._v("false")]),t._v(" 和 "),a("code",[t._v("null")]),t._v(" ,"),a("code",[t._v("undefined")]),t._v("不能作为标识符")])])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("标识符")]),t._v("就是变量，函数，属性或函数参数的名称")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("只能由 "),a("strong",[t._v("字母、数字、下划线、$")]),t._v(" 组成，但 "),a("strong",[t._v("不能")]),t._v(" 以数字开头")])]),t._v(" "),a("li",[a("p",[t._v("不能是关键字或保留字")])]),t._v(" "),a("li",[a("p",[t._v("大小写敏感，"),a("code",[t._v("a")]),t._v("和 "),a("code",[t._v("A")]),t._v("两个不同的变量")])])]),t._v(" "),a("h3",{attrs:{id:"变量声明的提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量声明的提升"}},[t._v("#")]),t._v(" 变量声明的提升")]),t._v(" "),a("p",[t._v("你可以提前使用一个稍后才声明的变量，而不会引发异常")]),t._v(" "),a("p",[t._v("变量声明提升时，"),a("strong",[t._v("只提升变量的定义")]),t._v("到当前作用域（全局作用域或者函数作用域）的顶部，"),a("strong",[t._v("不会提升它的值")])]),t._v(" "),a("ul",[a("li",[t._v("全局作用域：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n")])])]),a("ul",[a("li",[t._v("函数作用域：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数作用域")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var 声明的变量没有块级作用域")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("看道题")]),t._v(" "),a("p",[t._v("下列代码输出结果是?")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"js-基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-基本数据类型"}},[t._v("#")]),t._v(" JS 基本数据类型")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6942880039897825294",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 js 数据类型与堆栈内存"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"数据类型分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型分类"}},[t._v("#")]),t._v(" 数据类型分类")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型："),a("code",[t._v("string")]),t._v(","),a("code",[t._v("boolean")]),t._v(","),a("code",[t._v("number")]),t._v(","),a("code",[t._v("symbol")]),t._v("（ES6 新增）,"),a("code",[t._v("undefined")]),t._v(", "),a("code",[t._v("null")])]),t._v(" "),a("li",[t._v("引用数据类型："),a("code",[t._v("object")])]),t._v(" "),a("li",[t._v("js 的常见内置对象："),a("code",[t._v("Date")]),t._v(","),a("code",[t._v("Array")]),t._v(","),a("code",[t._v("Math")]),t._v(","),a("code",[t._v("Number")]),t._v(","),a("code",[t._v("Boolean")]),t._v(","),a("code",[t._v("String")]),t._v(","),a("code",[t._v("Array")]),t._v(","),a("code",[t._v("RegExp")]),t._v(","),a("code",[t._v("Function")]),t._v("...")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("其中 "),a("code",[t._v("Symbol")]),t._v(" 是 "),a("code",[t._v("ES6")]),t._v(" 中新增的数据类型：")]),t._v(" "),a("p",[a("code",[t._v("Symbol")]),t._v("符号是原始值，且符号实例是唯一、不可变的。 符号的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险。")]),t._v(" "),a("p",[a("strong",[t._v("更多 "),a("code",[t._v("Symbol")]),t._v(" 细节见 "),a("code",[t._v("ES6")]),t._v(" 章节")])])]),t._v(" "),a("h3",{attrs:{id:"基本数据类型和引用数据类型的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型和引用数据类型的区别"}},[t._v("#")]),t._v(" 基本数据类型和引用数据类型的区别")]),t._v(" "),a("p",[t._v("内存的分配不同")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型存储在栈中")]),t._v(" "),a("li",[t._v("复杂数据类型存储在堆中，栈中存储的变量，是指向堆中的引用地址")])]),t._v(" "),a("p",[t._v("访问机制不同")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型是按值访问")]),t._v(" "),a("li",[t._v("复杂数据类型按引用访问，"),a("code",[t._v("JS")]),t._v(" 不允许直接访问保存在堆内存中的对象，在访问一个对象时，首先得到的是这个对象在堆内存中的地址，然后再按照这个地址去获得这个对象的值")])]),t._v(" "),a("p",[t._v("复制变量时不同"),a("code",[t._v("a=b")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本数据类型："),a("code",[t._v("a=b")]),t._v(";是将 "),a("code",[t._v("b")]),t._v(" 中保存的原始值的副本赋值给新变量 "),a("code",[t._v("a")]),t._v(","),a("code",[t._v("a")]),t._v(" 和 "),a("code",[t._v("b")]),t._v(" 完全独立，互不影响")])]),t._v(" "),a("li",[a("p",[t._v("复杂数据类型："),a("code",[t._v("a=b")]),t._v(";将 "),a("code",[t._v("b")]),t._v(" 保存的对象内存的引用地址赋值给了新变量 "),a("code",[t._v("a")]),t._v(";"),a("code",[t._v("a")]),t._v("和 "),a("code",[t._v("b")]),t._v("指向了同一个堆内存地址，其中一个值发生了改变，另一个也会改变")])])]),t._v(" "),a("p",[t._v("比较变量时不同"),a("code",[t._v("==")]),t._v(" , "),a("code",[t._v("===")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本数据类型："),a("code",[t._v("==")]),a("strong",[t._v("先进行类型转换再确定操作数的值是否相等")]),t._v("，"),a("code",[t._v("===")]),t._v("不仅比较值是否相等，还会比较数据类型是否相同")])]),t._v(" "),a("li",[a("p",[t._v("引用数据类型：不管是 "),a("code",[t._v("==")]),t._v(" 还是 "),a("code",[t._v("===")]),t._v(" ，都是比较内存地址是否相同，即比较是否都指向同一个对象")])])]),t._v(" "),a("p",[t._v("参数传递的不同(实参/形参)")]),t._v(" "),a("p",[t._v("函数传参都是按值传递(栈中的存储的内容)：基本数据类型，拷贝的是值；复杂数据类型，拷贝的是引用地址")]),t._v(" "),a("h3",{attrs:{id:"typeof-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof-运算符"}},[t._v("#")]),t._v(" typeof 运算符")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("调用 "),a("code",[t._v("typeof null")]),t._v(" 返回的是"),a("code",[t._v('"object"')]),t._v("。这是因为特殊值 "),a("code",[t._v("null")]),t._v("被认为是一个对空对象的引用")])]),t._v(" "),a("li",[a("p",[t._v("严格来讲，函数在 "),a("code",[t._v("ECMAScript")]),t._v(" 中被认为是对象，并不代表一种数据类型。可是， 函数也有自己特殊的属性。为此，就有必要通过 "),a("code",[t._v("typeof")]),t._v(" 操作符来区分函数和其他对象。")])])])]),t._v(" "),a("p",[t._v("对一个值使用 "),a("code",[t._v("typeof")]),t._v("操作符会返回下列字符串之一：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v('"undefined"')]),t._v("表示值未定义")]),t._v(" "),a("li",[a("code",[t._v('"boolean"')]),t._v("表示值为布尔值")]),t._v(" "),a("li",[a("code",[t._v('"string"')]),t._v("表示值为字符串")]),t._v(" "),a("li",[a("code",[t._v('"number"')]),t._v("表示值为数值")]),t._v(" "),a("li",[a("code",[t._v('"object"')]),t._v("表示值为对象（而不是函数）或 "),a("code",[t._v("null")])]),t._v(" "),a("li",[a("code",[t._v('"function"')]),t._v("表示值为函数")]),t._v(" "),a("li",[a("code",[t._v('"symbol"')]),t._v("表示值为符号。")])]),t._v(" "),a("h3",{attrs:{id:"number-数字类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-数字类型"}},[t._v("#")]),t._v(" number 数字类型")]),t._v(" "),a("ul",[a("li",[t._v("所有数字不分大小，不分整浮，不分正负，都是数字类型")]),t._v(" "),a("li",[t._v("介于 0 和 1 之间的小数，0 可以省略")])]),t._v(" "),a("h4",{attrs:{id:"科学计数法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#科学计数法"}},[t._v("#")]),t._v(" 科学计数法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("3e8 -> 300000000\n3e-4 -> 0.0003\n")])])]),a("h4",{attrs:{id:"不同进制的数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同进制的数字"}},[t._v("#")]),t._v(" 不同进制的数字")]),t._v(" "),a("ul",[a("li",[t._v("二进制以 0b 开头")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("ul",[a("li",[t._v("八进制以 0 开头")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("017")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n")])])]),a("ul",[a("li",[t._v("十六进制以 0x 开头")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n")])])]),a("h4",{attrs:{id:"特殊的数字型值-nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊的数字型值-nan"}},[t._v("#")]),t._v(" 特殊的数字型值 NaN")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("typeof NaN // number")])]),t._v(" "),a("li",[t._v("0 除以 0 的结果是 NaN，事实上，在数学运算中，若结果不能得到数字，其结果往往都是 NaN")]),t._v(" "),a("li",[a("code",[t._v("NaN")]),t._v("不自等:"),a("a",{attrs:{href:"https://juejin.cn/post/6844904200233566222",target:"_blank",rel:"noopener noreferrer"}},[t._v("NaN 不等于 NaN"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("原因")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("NaN")]),t._v("是一种异常的结果")]),t._v("，也就是“"),a("code",[t._v("not a number")]),t._v("”，虽然它也是一个变量，但它是描述性变量，'a'不是一个数字（"),a("code",[t._v("not a number")]),t._v("），'b'也不是一个数字（"),a("code",[t._v("not a number")]),t._v("），但是'a'和'b'并不相等，所以"),a("code",[t._v("NaN != NaN")]),t._v("也就成立了。")])]),t._v(" "),a("ul",[a("li",[t._v("如何判断某变量值为"),a("code",[t._v("NaN")]),t._v(":"),a("code",[t._v("isNaN()")]),t._v("函数可以用来判断变量值是否为"),a("code",[t._v("NaN")]),t._v(",但 "),a("code",[t._v("isNaN()")]),t._v("也不好用，它的机理是：只要该变量传入"),a("code",[t._v("Number()")]),t._v("的执行结果是"),a("code",[t._v("NaN")]),t._v("，则 "),a("code",[t._v("isNaN()")]),t._v("函数都会得到 true")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我懂得'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"string-字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串类型"}},[t._v("#")]),t._v(" string 字符串类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('数字 11 和字符串"11"在语义上是不同的，前者表达一个数量，后者是一个文本')])]),t._v(" "),a("li",[a("p",[t._v("加号可以用来拼接多个字符串")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zha'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ng'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'zhang'")]),t._v("\n")])])]),a("ul",[a("li",[t._v('要将一个变量的值“插入”到字符串中，要“斩断链接"')])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zfh'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("‘哈哈’ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//zfh2022哈哈")]),t._v("\n")])])]),a("ul",[a("li",[t._v("空字符串，直接书写闭合的引号对即可")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),a("ul",[a("li",[t._v("字符串的 "),a("code",[t._v("length")]),t._v("属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n")])])]),a("h4",{attrs:{id:"字符串的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的常用方法"}},[t._v("#")]),t._v(" 字符串的常用方法")]),t._v(" "),a("p",[a("code",[t._v("charAt()")]),t._v(":可以得到指定位置的字符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//b")]),t._v("\n")])])]),a("p",[a("code",[t._v("substring()")]),t._v(" ,"),a("code",[t._v("substr()")]),t._v("和 "),a("code",[t._v("slice()")]),t._v("方法")]),t._v(" "),a("ul",[a("li",[t._v("substring()")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("substring(a,b)")]),t._v("可以得到从 "),a("code",[t._v("a")]),t._v(" 开始到 "),a("code",[t._v("b")]),t._v(" 结束（左闭右开，"),a("strong",[t._v("不包括 "),a("code",[t._v("b")]),t._v(" 处")]),t._v("）的子串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘ab'")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("substring(a,b)")]),t._v("方法如果省略第二个参数，返回的子串会一直到字符串的结尾")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘bcd'")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("substring(a,b)中，a 可以大于 b，数字顺序将自动调整为小数在前")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘c'")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("如果任一参数小于 0 或为 "),a("code",[t._v("NaN")]),t._v("，则被当作 0")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'ab'")]),t._v("\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("如果任一参数大于字符串长度，则被当成字符串长度")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'abcd'")]),t._v("\n")])])]),a("ul",[a("li",[t._v("substr()")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("尽管 "),a("code",[t._v("String.prototype.substr(…)")]),t._v(' 没有严格被废弃 (as in "removed from the Web standards"), 但'),a("strong",[t._v("它被认作是遗留的函数并且可以的话应该避免使用")]),t._v("。它并非"),a("code",[t._v("JavaScript")]),t._v("核心语言的一部分，未来将可能会被移除掉。如果可以的话，使用 "),a("code",[t._v("substring")]),t._v("() 替代它")])]),t._v(" "),a("ul",[a("li",[t._v("slice()")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("slice(a,b)")]),t._v("方法得到从"),a("code",[t._v("a")]),t._v("开始到 "),a("code",[t._v("b")]),t._v("结束（不包括 "),a("code",[t._v("b")]),t._v(" 处）的"),a("strong",[t._v("子串")]),t._v(",不会改变原字符串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//‘ab'")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("slice(a,b)")]),t._v("的参数可以是负数,表示倒数位置")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'c'")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[t._v("slice(a,b)")]),t._v("中，索引值 "),a("code",[t._v("a")]),t._v(" 对应的位置必须在索引值 "),a("code",[t._v("b")]),t._v(" 之前")])]),t._v(" "),a("p",[a("code",[t._v("toUpperCase()")]),t._v(","),a("code",[t._v("toLowerCase()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("toUpperCase()")]),t._v(" 转为大写")]),t._v(" "),a("li",[a("code",[t._v("toLowerCase()")]),t._v(" 转为小写")])]),t._v(" "),a("p",[a("code",[t._v("indexOf()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("index0f()")]),t._v("方法返回某个指定的字符串值在字符串中首次出现的位置")]),t._v(" "),a("li",[t._v("如果要检索的字符串值没有出现，则该返回-1")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n")])])]),a("p",[a("code",[t._v("includes()")])]),t._v(" "),a("p",[a("code",[t._v("includes()")]),t._v(" 方法用于判断一个字符串是否包含在另一个字符串中，根据情况返回 "),a("code",[t._v("true")]),t._v(" 或 "),a("code",[t._v("false")])]),t._v(" "),a("h3",{attrs:{id:"boolean-布尔-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-布尔-类型"}},[t._v("#")]),t._v(" boolean（布尔）类型")]),t._v(" "),a("p",[t._v("布尔型值只有两个："),a("code",[t._v("true")]),t._v("和 "),a("code",[t._v("false")]),t._v("，分别表示真和假")]),t._v(" "),a("h3",{attrs:{id:"undefined-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined-类型"}},[t._v("#")]),t._v(" undefined 类型")]),t._v(" "),a("p",[a("code",[t._v("undefined")]),t._v(" 表示一个变量自然的、最原始的状态值，就是此处应该有一个值，但是还没有定义")]),t._v(" "),a("p",[a("code",[t._v("undefined")]),t._v("又是值，又是一种类型，这种类型只有它自己一个值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("p",[a("code",[t._v("undefined")]),t._v("一般会在以下 4 种场景中出现：")]),t._v(" "),a("ul",[a("li",[t._v("声明了一个变量，但没有赋值，就等于 "),a("code",[t._v("undefined")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("ul",[a("li",[t._v("函数定义了形参，但没有传递实参，该参数等于 "),a("code",[t._v("undefined")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数定义了形参 a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//未传递实参")]),t._v("\n")])])]),a("ul",[a("li",[t._v("访问对象上不存在的属性，该属性的值为 "),a("code",[t._v("undefined")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("ul",[a("li",[t._v("函数没有返回值时，默认返回 "),a("code",[t._v("undefined")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("h3",{attrs:{id:"null-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-类型"}},[t._v("#")]),t._v(" null 类型")]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v(" 表示一个变量被人为的设置为空对象，而不是原始状态，即该处不应该有值")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("typeof")]),t._v("检测 "),a("code",[t._v("null")]),t._v(" 值，结果是"),a("code",[t._v("object")]),t._v("，这点 "),a("strong",[t._v("尤其要注意")]),t._v(" ,类型和 "),a("code",[t._v("typeof")]),t._v("检测结果并不总是一一对应，比如数组用 "),a("code",[t._v("typeof")]),t._v(" 检测结果也是 "),a("code",[t._v("object")])]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v("一般会在以下 2 种场景中出现：")]),t._v(" "),a("ul",[a("li",[t._v("利用 "),a("code",[t._v("document.getElementById(‘XXX’)")]),t._v(" 寻找一个不存在的元素，将返回 "),a("code",[t._v("null")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'notExistElement'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("ul",[a("li",[t._v("作为对象原型链的终点")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),a("h3",{attrs:{id:"null-和-undefined-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined-的区别"}},[t._v("#")]),t._v(" null 和 undefined 的区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("最佳实践")]),t._v(" "),a("p",[t._v("在实际使用过程中，为了保证变量所代表的语义，不要对一个变量显式的赋值 "),a("code",[t._v("undefined")]),t._v("，当需要释放一个对象时，直接赋值为 "),a("code",[t._v("null")]),t._v(" 即可")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903831071883277",target:"_blank",rel:"noopener noreferrer"}},[t._v("undefined vs null"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[a("p",[t._v("数据类型不同")])]),t._v(" "),a("li",[a("p",[t._v("转换为数值区别:"),a("code",[t._v("null")]),t._v('是一个表示"无"的对象，转为数值时为 0；'),a("code",[t._v("undefined")]),t._v(' 是一个表示"无"的原始值，转为数值时为 NaN')])]),t._v(" "),a("li",[a("p",[a("code",[t._v("null == undefined")]),t._v("会返回"),a("code",[t._v("true")]),t._v("，因为它们是类似的值；但"),a("code",[t._v("null === undefined")]),t._v("会返回"),a("code",[t._v("false")]),t._v("，因为它们是不同类型的值。")])])]),t._v(" "),a("h2",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[t._v("#")]),t._v(" 数据类型转换")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("在 JS 中类型转换只有三种情况，分别是："),a("strong",[t._v("转换为布尔值")]),t._v(","),a("strong",[t._v("转换为数字")]),t._v(","),a("strong",[t._v("转换为字符串")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://zfh-oss.oss-cn-shanghai.aliyuncs.com/docs-images/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%85%A8%E9%9D%A2.png",alt:"数据类型转换全面"}})]),t._v(" "),a("h3",{attrs:{id:"转数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转数字"}},[t._v("#")]),t._v(" 转数字")]),t._v(" "),a("p",[t._v("有 3 个函数可以将非数值转换为数值："),a("code",[t._v("Number()")]),t._v("、"),a("code",[t._v("parseInt()")]),t._v("和 "),a("code",[t._v("parseFloat()")]),t._v("。"),a("code",[t._v("Number()")]),t._v("是转型函数，可用于任何数据类型。后两个函数主要用于将字符串转换为数值。对于同样的参数，这 3 个函数执行的操作也不同:")]),t._v(" "),a("h4",{attrs:{id:"number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number()")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("布尔值："),a("code",[t._v("true")]),t._v("和"),a("code",[t._v("false")]),t._v(" 将分别被转为 1 和 0")])]),t._v(" "),a("li",[a("p",[t._v("数字值，直接返回")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("null")]),t._v(" 值，返回 0")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("undefined")]),t._v("，返回 "),a("code",[t._v("NaN")])])]),t._v(" "),a("li",[a("p",[t._v("如果是字符串：")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果字符串中只包含数字（包括前面带正负号的情况），则转换为十进制数")])]),t._v(" "),a("li",[a("p",[t._v("如果是空字符串，则转换为 0")])]),t._v(" "),a("li",[a("p",[t._v("如果包含有效的浮点格式，则转换为浮点数值")])]),t._v(" "),a("li",[a("p",[t._v("如果包含非数字内容，则转换为 "),a("code",[t._v("NaN")])])])]),t._v(" "),a("h4",{attrs:{id:"parseint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseint"}},[t._v("#")]),t._v(" parseInt()")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("最佳实践")]),t._v(" "),a("p",[t._v("不传底数参数相当于让 "),a("code",[t._v("parseInt()")]),t._v("自己决定如何解析，所以为了避免出错，请始终传给它第二个参数")])]),t._v(" "),a("p",[a("code",[t._v("parseInt()")]),t._v("可以为函数提供第二个参数：转换时使用的基数(2,8,10,16)")]),t._v(" "),a("p",[t._v("它的工作方式是：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果第一个字符不是数字字符或者正负号，则返回 "),a("code",[t._v("NaN")]),t._v("(用 "),a("code",[t._v("parseInt()")]),t._v("转换空字符串时会返回 NaN)")])]),t._v(" "),a("li",[a("p",[t._v("如果遇到的第一个字符是数字字符，"),a("code",[t._v("parseInt()")]),t._v("会继续解析后面的字符，直到解析完所有字符或遇到了非数字字符")])])]),t._v(" "),a("h4",{attrs:{id:"parsefloat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat"}},[t._v("#")]),t._v(" parsefloat()")]),t._v(" "),a("p",[t._v("也是从第一个字符开始解析，一直到字符串末尾或者遇见一个无效的浮点数字字符为止")]),t._v(" "),a("p",[t._v("字符串中第一个小数点是有效地，而第二个小数点就是无效的了")]),t._v(" "),a("p",[t._v("十六进制字符串会始终被转换成 0")]),t._v(" "),a("p",[t._v("只解析十进制值，所以不指定第二个参数")]),t._v(" "),a("p",[t._v("如果字符串包含的是一个可解析为整数的数（没有小数点或者小数点后面都是零），则返回整数值")]),t._v(" "),a("h3",{attrs:{id:"转布尔"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转布尔"}},[t._v("#")]),t._v(" 转布尔")]),t._v(" "),a("p",[t._v("在条件判断时，除了 "),a("code",[t._v("undefined")]),t._v("， "),a("code",[t._v("null")]),t._v("，"),a("code",[t._v("false")]),t._v("，"),a("code",[t._v("NaN")]),t._v("，"),a("code",[t._v("''")]),t._v("， "),a("code",[t._v("0")]),t._v("，"),a("code",[t._v("-0")]),t._v("，"),a("strong",[t._v("其他所有值都转为 true，包括所有对象。")])]),t._v(" "),a("h3",{attrs:{id:"转字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转字符串"}},[t._v("#")]),t._v(" 转字符串")]),t._v(" "),a("h4",{attrs:{id:"tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[t._v("#")]),t._v(" toString()")]),t._v(" "),a("p",[t._v("该方法可以用于数值，布尔值，对象，字符串值;null,undefined 没有该方法")]),t._v(" "),a("p",[t._v("当数值调用该方法时，可以传入一个底数参数,表示以什么底数输出数值的字符串表示")]),t._v(" "),a("h4",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String()")]),t._v(" "),a("p",[t._v("String()转型函数遵循以下规则：")]),t._v(" "),a("ul",[a("li",[t._v("如果值有 toString()方法，则调用该方法(不传参数)并返回结果")]),t._v(" "),a("li",[t._v("如果值是 null，返回“null”")]),t._v(" "),a("li",[t._v("如果值是 undefined,返回“undefined”")])]),t._v(" "),a("h4",{attrs:{id:"用-➕-操作符加上一个空字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用-➕-操作符加上一个空字符串"}},[t._v("#")]),t._v(" 用 ➕ 操作符加上一个空字符串“”")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11233333333123")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n")])])]),a("h3",{attrs:{id:"对象转原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象转原始类型"}},[t._v("#")]),t._v(" 对象转原始类型")]),t._v(" "),a("p",[t._v("对象在转换类型的时候，会调用内置的 "),a("code",[t._v("Symbol.ToPrimitive")]),t._v(" 函数，对于该函数来说，算法逻辑一般来说如下：")]),t._v(" "),a("ul",[a("li",[t._v("如果已经是原始类型了，那就不需要转换了")]),t._v(" "),a("li",[t._v("调用 x.valueOf()，如果转换为基础类型，就返回转换的值")]),t._v(" "),a("li",[t._v("调用 x.toString()，如果转换为基础类型，就返回转换的值")]),t._v(" "),a("li",[t._v("如果都没有返回原始类型，就会报错")])]),t._v(" "),a("p",[t._v("当然你也可以重写 "),a("code",[t._v("Symbol.toPrimitive")]),t._v(" ，该方法在转原始类型时调用优先级最高。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 3")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);