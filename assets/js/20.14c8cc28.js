(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{638:function(t,s,v){"use strict";v.r(s);var _=v(29),e=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"渲染引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎"}},[t._v("#")]),t._v(" 渲染引擎")]),t._v(" "),v("p",[v("strong",[t._v("渲染引擎")]),t._v("又名"),v("strong",[t._v("浏览器内核")]),t._v("，指负责对网页语法解析并渲染成一张可视化页面的解析器。它是浏览器最核心最重要的部位，不同内核对网页语法的解析也有不同，因此同一网页语法在不同内核的浏览器中的渲染效果也可能不同，这就是常说的"),v("strong",[t._v("浏览器差异性")]),t._v("。")]),t._v(" "),v("p",[t._v("上述提到的世界五大浏览器，在自身的发展过程中都使用了一种或多种浏览器内核作为自身的渲染引擎。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Google Chrome")]),t._v("：Webkit(前期)、Blink(后期)")]),t._v(" "),v("li",[v("strong",[t._v("Apple Safari")]),t._v("：Webkit")]),t._v(" "),v("li",[v("strong",[t._v("Mozilla Firefox")]),t._v("：Gecko")]),t._v(" "),v("li",[v("strong",[t._v("ASA Opera")]),t._v("：Presto(前期)、Blink(后期)")]),t._v(" "),v("li",[v("strong",[t._v("Microsoft IExplorer")]),t._v("：Trident")]),t._v(" "),v("li",[v("strong",[t._v("Microsoft Edge")]),t._v("：Trident(前期)、Blink(后期)")])]),t._v(" "),v("div",{staticClass:"language-! extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("IExplorer和Edge同是微软公司开发的浏览器产品，鉴于IExplorer存在很多为人诟病的问题，在后续的系统升级中逐渐使用Edge取代IExplorer在Windows上的位置\n")])])]),v("p",[t._v("因此20多年的浏览器发展史里，被大规模使用的浏览器内核也就这五个。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Blink内核")]),t._v("：由谷歌公司和欧朋公司合作自研的内核，同时谷歌公司也将其作为开源内核架构"),v("code",[t._v("Chromium")]),t._v("的一部分发布，在"),v("code",[t._v("Chrome 28+")]),t._v("和"),v("code",[t._v("Opear 15+")]),t._v("中被使用。")]),t._v(" "),v("li",[v("strong",[t._v("Webkit内核")]),t._v("：由苹果公司自研的内核，同时也是"),v("code",[t._v("Blink内核")]),t._v("的原型，在"),v("code",[t._v("Chrome 1 ~ 28")]),t._v("和"),v("code",[t._v("Safari 1+")]),t._v("中被使用。")]),t._v(" "),v("li",[v("strong",[t._v("Gecko内核")]),t._v("：由网景公司自研的内核，先期在"),v("code",[t._v("Navigator")]),t._v("中使用，后期推广到"),v("code",[t._v("Firefox")]),t._v("上，在"),v("code",[t._v("Firefox 1+")]),t._v("中被使用。")]),t._v(" "),v("li",[v("strong",[t._v("Presto内核")]),t._v("：由欧朋公司自研的内核，其渲染性能达到极致但牺牲了兼容性，目前已经废弃，在"),v("code",[t._v("Opear 7 ~ 14")]),t._v("中被使用。")]),t._v(" "),v("li",[v("strong",[t._v("Trident内核")]),t._v("：由微软公司自研的内核，由于其被包含在全世界使用率最高的"),v("code",[t._v("Windows操作系统")]),t._v("中，导致十多年时间里一直称霸浏览器内核界，在"),v("code",[t._v("IExplorer 4+")]),t._v("中被使用。")])]),t._v(" "),v("h2",{attrs:{id:"渲染过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程"}},[t._v("#")]),t._v(" 渲染过程")]),t._v(" "),v("p",[t._v("要了解"),v("code",[t._v("浏览器页面的渲染过程")]),t._v("，首先得知道"),v("strong",[t._v("关键渲染路径")]),t._v("。"),v("code",[t._v("关键渲染路径")]),t._v("指浏览器从最初接收请求得到 HTML、CSS、JS 等资源，然后解析、构建、渲染、布局、绘制、合成，到最后呈现在用户眼前界面的整个过程。")]),t._v(" "),v("ol",[v("li",[t._v("解析文件")])]),t._v(" "),v("ul",[v("li",[t._v("将 html 文件转换为 DOM 树")]),t._v(" "),v("li",[t._v("将 css 文件转换为 CSSOM 树")]),t._v(" "),v("li",[t._v("将 DOM 树和 CSSOM 树合并生成渲染树")])]),t._v(" "),v("p",[t._v("HTML 文档描述一个页面的结构，"),v("strong",[t._v("浏览器通过"),v("code",[t._v("HTML解析器")]),t._v("将 HTML 解析成 DOM 树结构。HTML 文档中所有内容皆为节点，各节点间拥有层级关系，彼此相连，构成 DOM 树")]),t._v("。"),v("code",[t._v("构建DOM树的过程")]),t._v("："),v("strong",[t._v("读取 HTML 文档的字节(Bytes)，将字节转换成字符(Chars)，依据字符确定标签(Tokens)，将标签转换成节点(Nodes)，以节点为基准构建 DOM 树。")])]),t._v(" "),v("p",[t._v("CSS 文档描述一个页面的表现，"),v("strong",[t._v("浏览器通过 CSS 解析器将 CSS 解析成 CSSOM 树结构")]),t._v("，与 DOM 树结构比较像。CSS 文档中所有内容皆为节点，与 HTML 文档中的节点一一对应，各节点间拥有层级关系，彼此相连，构成 CSSOM 树。构建 CSSOM 树的过程：读取 CSS 文档的字节(Bytes)，将字节转换成字符(Chars)，依据字符确定标签(Tokens)，将标签转换成节点(Nodes)，以节点为基准构建 CSSOM 树。与 DOM 树的构建过程完全一致。")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("绘制图层")])]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("根据渲染树生成布局渲染树")]),t._v("("),v("code",[t._v("回流")]),t._v(")")]),t._v(" "),v("li",[v("strong",[t._v("根据布局渲染树生成绘制渲染树")]),t._v("("),v("code",[t._v("重绘")]),t._v(")")])]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("合成图层：根据绘制渲染树合成图层显示在屏幕上")])]),t._v(" "),v("h3",{attrs:{id:"解析文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解析文件"}},[t._v("#")]),t._v(" 解析文件")]),t._v(" "),v("p",[t._v("HTML文档描述一个页面的结构，浏览器通过"),v("code",[t._v("HTML解析器")]),t._v("将HTML解析成"),v("code",[t._v("DOM树")]),t._v("结构。HTML文档中所有内容皆为节点，各节点间拥有层级关系，彼此相连，构成DOM树。构建"),v("code",[t._v("DOM树")]),t._v("的过程：读取HTML文档的"),v("strong",[t._v("字节")]),t._v("(Bytes)，将字节转换成"),v("strong",[t._v("字符")]),t._v("(Chars)"),v("span",{staticStyle:{color:"red"}},[t._v("批注：在计算机屏幕上看到的是实体化的文字，而在计算机存储介质中存放的实际是二进制的比特流。\n那么在这两者之间的转换规则就需要一个统一的标准，各种字符集标准就出现了")]),t._v("，依据字符确定"),v("strong",[t._v("标签")]),t._v("(Tokens)，将标签转换成"),v("strong",[t._v("节点")]),t._v("(Nodes)，以节点为基准构建"),v("strong",[t._v("DOM树")]),t._v("。")]),t._v(" "),v("p",[t._v("在构建DOM树的过程中，当"),v("code",[t._v("HTML解析器")]),t._v("遇到"),v("code",[t._v("<script>")]),t._v("时会立即阻塞DOM树的构建，将控制权移交给浏览器的"),v("code",[t._v("JS引擎")]),t._v("，等到"),v("code",[t._v("JS引擎")]),t._v("运行完毕，浏览器才会从中断的地方恢复DOM树的构建。"),v("code",[t._v("<script>")]),t._v("的脚本加载完毕，"),v("code",[t._v("JS引擎")]),t._v("通过"),v("code",[t._v("DOM API")]),t._v("和"),v("code",[t._v("CSSOM API")]),t._v("操作DOM树和CSSOM树。为何会产生"),v("strong",[t._v("渲染阻塞")]),t._v("呢？其根本原因在于："),v("strong",[t._v("JS操作DOM后，浏览器无法预测未来DOM的具体内容，为了防止无效操作和节省资源，只能阻塞DOM树的构建。")])]),t._v(" "),v("p",[t._v("// TODO:"),v("span",{staticStyle:{color:"red"}},[t._v("script异步加载：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://zfh-oss.oss-cn-shanghai.aliyuncs.com/docs-images/%E8%A7%A3%E6%9E%90%E6%96%87%E4%BB%B6.png",alt:"解析文件"}})]),t._v(" "),v("p",[t._v("浏览器的"),v("code",[t._v("渲染引擎")]),t._v("将DOM树和CSSOM树合并生成渲染树，只渲染需显示的节点及其样式。"),v("strong",[t._v("DOM树")]),t._v("、"),v("strong",[t._v("CSSOM树")]),t._v("和"),v("strong",[t._v("渲染树")]),t._v("三者的构建并无"),v("code",[t._v("先后条件")]),t._v("和"),v("code",[t._v("先后顺序")]),t._v("，并非完全独立而是会有交叉并行构建的情况。因此会形成一边加载，一边解析，一边渲染的工作现象。")]),t._v(" "),v("h3",{attrs:{id:"绘制图层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#绘制图层"}},[t._v("#")]),t._v(" 绘制图层")]),t._v(" "),v("p",[t._v("进入绘制阶段，遍历渲染树，调用渲染器的"),v("code",[t._v("paint()")]),t._v("在屏幕上绘制内容。根据渲染树布局计算样式，即每个节点在页面中的布局、尺寸等几何属性。HTML默认是流式布局，CSS和JS会打破这种布局，改变DOM的几何属性和外观属性。在绘制过程中，根据渲染树布局，再根据布局绘制，这就是常听常说的"),v("strong",[t._v("回流重绘")]),t._v("。")]),t._v(" "),v("p",[t._v("在此涉及到两个核心概念："),v("strong",[t._v("回流")]),t._v("、"),v("strong",[t._v("重绘")]),t._v("。笔者用两句精简的话分别概括它们。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("回流")]),t._v("：几何属性需改变的渲染")]),t._v(" "),v("li",[v("strong",[t._v("重绘")]),t._v("：更改外观属性而不影响几何属性的渲染")])]),t._v(" "),v("p",[t._v("当生成渲染树后，至少会渲染一次。在后续交互过程中，还会不断地重新渲染。这时只会"),v("code",[t._v("回流重绘")]),t._v("或"),v("code",[t._v("只有重绘")]),t._v("。因此引出一个定向法则："),v("strong",[t._v("回流必定引发重绘，重绘不一定引发回流")]),t._v("。")]),t._v(" "),v("p",[t._v("在下一章中，笔者会安排整章篇幅讲述"),v("strong",[t._v("回流重绘")]),t._v("以及如何让回流重绘的影响最小化。相信下一章提及的"),v("strong",[t._v("属性排序")]),t._v("应该较少同学了解过或使用过，敬请期待。")]),t._v(" "),v("h3",{attrs:{id:"合成图层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#合成图层"}},[t._v("#")]),t._v(" 合成图层")]),t._v(" "),v("p",[v("strong",[t._v("兼容性")]),t._v("又名"),v("code",[t._v("网站兼容性")]),t._v("或"),v("code",[t._v("网页兼容性")]),t._v("，指网页在各种浏览器上的显示效果可能不同而产生浏览器和网页间的兼容问题。")]),t._v(" "),v("p",[t._v("说到兼容性，就不得不推荐一个专门为前端开发者定制可查询"),v("code",[t._v("CSS/JS特性")]),t._v("在各种浏览器中兼容性的网站"),v("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fcaniuse.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Caniuse"),v("OutboundLink")],1),t._v("，它可很好地保障网页在不同浏览器间的兼容性。有了这个工具可快速地了解使用到的代码在各个浏览器中的效果。所以后续使用VScode编码的过程中都会顺带使用"),v("code",[t._v("Caniuse")]),t._v("查看CSS属性与选择器的兼容性。")]),t._v(" "),v("p",[t._v("产生浏览器间的兼容问题，正是上述谈到的"),v("code",[t._v("渲染引擎")]),t._v("而导致的。在网站的设计和开发中，做好浏览器兼容才能让网站在不同浏览器间都能显示正常。浏览器对标准的更好兼容能够给用户带来更好的使用体验，当然无法奢求浏览器厂商能统一所有浏览器标准，所以前端开发者只能自己着手解决。")]),t._v(" "),v("p",[t._v("以下聊聊处理CSS兼容性的三种方式，相对处理JS兼容性来说简单到不得了，这也是普遍前端开发者认为CSS简单的原因之一。")]),t._v(" "),v("h4",{attrs:{id:"磨平浏览器默认样式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磨平浏览器默认样式"}},[t._v("#")]),t._v(" 磨平浏览器默认样式")]),t._v(" "),v("p",[t._v("每个浏览器的CSS默认样式不尽相同，所以最简单最有效的方式就是"),v("code",[t._v("对其默认样式初始化")]),t._v("。以下贴一个各位同学都会的初始化代码。简单暴力但不明确，"),v("code",[t._v("*")]),t._v("通配符可是有执行性能问题的。")]),t._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("p",[t._v("以下推荐两种磨平浏览器默认样式的方式，在接入其他"),v("code",[t._v("css文件")]),t._v("前将其导入，天下太平，大家都不能拼爹了，都是在同一起跑线上，"),v("code",[t._v("IExplorer")]),t._v("同学你可别抢跑哇，大家都盯着你呢！")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fnecolas%2Fnormalize.css",target:"_blank",rel:"noopener noreferrer"}},[t._v("normalize.css"),v("OutboundLink")],1),t._v("：懒人必备的浏览器默认样式库，接近"),v("code",[t._v("40k")]),t._v("的Star，说明大部分人都是懒人")]),t._v(" "),v("li",[v("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FJowayYoung%2Fidea-css%2Fblob%2Fmaster%2Fcss%2Freset.css",target:"_blank",rel:"noopener noreferrer"}},[t._v("reset.css"),v("OutboundLink")],1),t._v("：其实就是笔者自定义的默认样式，各位同学也可自行为项目撰写一份默认样式")])]),t._v(" "),v("p",[t._v("在项目入口文件的其他"),v("code",[t._v("css文件")]),t._v("前导入，若使用"),v("code",[t._v("burce-cli")]),t._v("，可能发现在"),v("code",[t._v("index.js")]),t._v("里已经提前导入了"),v("code",[t._v("reset.css")]),t._v("。")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/normalize.css"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/reset.css"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("h5",{attrs:{id:"插入浏览器私有属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入浏览器私有属性"}},[t._v("#")]),t._v(" 插入浏览器私有属性")]),t._v(" "),v("p",[t._v("通常编写CSS都会在一些CSS3属性前加入"),v("code",[t._v("-webkit-")]),t._v("、"),v("code",[t._v("-moz-")]),t._v("、"),v("code",[t._v("-ms-")]),t._v("或"),v("code",[t._v("-o-")]),t._v("，这些奇形怪状写到手软的东西就是"),v("strong",[t._v("浏览器私有属性")]),t._v("。样式少还好，样式多那就欲哭无泪了😂。")]),t._v(" "),v("p",[t._v("出现这些私有属性，是因为制定CSS标准的W3C其动作就像蜗牛一样慢，量产一个属性是需走一个很严格很复杂的流程。一个成熟且被大众肯定的属性，浏览器厂商会加大其支持力度而铺路，但为了避免日后W3C公布标准时有所变更，就加入一个本厂商的私有属性提前支持该属性，待W3C公布该属性标准后，再让新版浏览器支持标准属性。")]),t._v(" "),v("p",[t._v("对于编写私有属性的顺序需特别注意："),v("strong",[t._v("兼容性写法放到前面，标准写法放到最后")]),t._v("。在浏览器解析CSS过程中，若标准属性无法使用则使用当前浏览器对应的私有属性。")]),t._v(" "),v("div",{staticClass:"language-css extra-class"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Chrome、Safari、New Opera、New Edge */")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Firefox */")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("-moz-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* IExplorer、Old Edge */")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("-ms-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Old Opera */")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("-o-transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 标准 */")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10px"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("p",[t._v("当然不是所有的CSS3属性都需补齐"),v("code",[t._v("-webkit-")]),t._v("、"),v("code",[t._v("-moz-")]),t._v("、"),v("code",[t._v("-ms-")]),t._v("或"),v("code",[t._v("-o-")]),t._v("，上述Demo只是一个示例，真正的"),v("code",[t._v("transform")]),t._v("私有属性只有"),v("code",[t._v("-webkit-")]),t._v("和"),v("code",[t._v("-ms-")]),t._v("。这些需查看"),v("code",[t._v("Caniuse")]),t._v("确保正确的编写，若想偷懒也可全部写上。")]),t._v(" "),v("p",[t._v("每个CSS3属性都编写这么一堆兼容性代码，无疑是对生命最大的浪费。在使用Webpack打包项目代码的过程中，可接入"),v("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fpostcss%2Fpostcss-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-loader"),v("OutboundLink")],1),t._v("和"),v("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcsstools%2Fpostcss-preset-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-preset-env"),v("OutboundLink")],1),t._v("，"),v("code",[t._v("postcss-preset-env")]),t._v("内置了"),v("code",[t._v("autoprefixer")]),t._v("，它会依据"),v("code",[t._v("Caniuse")]),t._v("所提供的数据对代码里的CSS3属性批量添加私有属性。")]),t._v(" "),v("p",[t._v("若使用"),v("code",[t._v("bruce-cli")]),t._v("，那么也无需关注CSS私有属性的插入，因为其内置了"),v("code",[t._v("postcss-loader")]),t._v("和"),v("code",[t._v("postcss-preset-env")]),t._v("。自动化工具的好处就是为了解决一些重复而无趣的工作。")]),t._v(" "),v("h4",{attrs:{id:"css-hack"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css-hack"}},[t._v("#")]),t._v(" CSS Hack")]),t._v(" "),v("p",[v("strong",[t._v("CSS Hack")]),t._v("指针对不同浏览器编写不同CSS，让它能够同时兼容不同浏览器，在不同浏览器中渲染想要的效果。当然也可反过来利用"),v("code",[t._v("CSS Hack")]),t._v("为不同版本的浏览器定制不同效果。")]),t._v(" "),v("p",[t._v("在一些老旧网站的"),v("code",[t._v("html文件")]),t._v("或"),v("code",[t._v("css文件")]),t._v("里可能会看到以下代码，没错，这就是"),v("code",[t._v("CSS Hack")]),t._v("。现在可能很多同学都不会遇到这种写法，毕竟很多公司的产品都放弃了"),v("code",[t._v("IExplorer 8")]),t._v("以下的兼容，这些痕迹都已经成为历史。很多同学没想过5年到10年前的前端开发者是多么苦逼的，光兼容"),v("code",[t._v("IExplorer")]),t._v("就已经够烦了，还连续兼容几个版本。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--[if IE]>\n    <style>\n    .elem {\n        background-color: #f66;\n    }\n    </style>\n    <![endif]--\x3e")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.elem {\n    background-color: #f66; /* IExplorer 8+ */\n    *background-color: #f66; /* IExplorer 7 */\n    _background-color: #f66; /* IExplorer 6 */\n}\n")])])]),v("p",[t._v("所以现在也不会推荐去学习这些"),v("code",[t._v("CSS Hack")]),t._v("，有一个基本的了解即可。上述"),v("code",[t._v("CSS Hack")]),t._v("写法只是最简单的几行代码，其实还存在一些更难的表达式。当然也不推荐这种写法，毕竟不符合大名鼎鼎的"),v("strong",[t._v("雅虎军规")]),t._v("的"),v("code",[t._v("Avoid CSS Expressions")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);